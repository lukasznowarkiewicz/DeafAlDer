Archive member included because of file (symbol)

c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodqi4.o)
                              ./d_led.o (__udivmodqi4)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              ./d_led.o (__do_copy_data)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              ./MK_ENCODER/mk_encoder.o (__do_clear_bss)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                              ./main.o (__eerd_byte_m8)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eewr_byte_atmega8.o)
                              ./main.o (__eewr_byte_m8)

Allocating common symbols
Common symbol       size              file

cy4                 0x1               ./d_led.o
enc_cnt             0x1               ./MK_ENCODER/mk_encoder.o
flag                0x1               ./MK_ENCODER/mk_encoder.o
point               0x1               ./d_led.o
enc_flag            0x1               ./MK_ENCODER/mk_encoder.o
cy1                 0x1               ./d_led.o
sw_callback         0x2               ./MK_ENCODER/mk_encoder.o
ed                  0x1               ./MK_ENCODER/mk_encoder.o
Timer2              0x2               ./main.o
speed               0x1               ./main.o
cy2                 0x1               ./d_led.o
enc_callback        0x2               ./MK_ENCODER/mk_encoder.o
Timer1              0x2               ./main.o
cy3                 0x1               ./d_led.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./MK_ENCODER/mk_encoder.o
LOAD ./d_led.o
LOAD ./main.o
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x774
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000026       0x2c ./d_led.o
 *(.progmem*)
 .progmem.data  0x00000052       0x10 ./MK_ENCODER/mk_encoder.o
                0x00000052                table
                0x00000062                . = ALIGN (0x2)
                0x00000062                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000062        0x0 linker stubs
 *(.trampolines*)
                0x00000062                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000062                __ctors_start = .
 *(.ctors)
                0x00000062                __ctors_end = .
                0x00000062                __dtors_start = .
 *(.dtors)
                0x00000062                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000062        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000062                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000062        0xc c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000006e       0x16 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x0000006e                __do_copy_data
 .init4         0x00000084       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000084                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000094        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000098        0x2 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000098                __vector_1
                0x00000098                __vector_12
                0x00000098                __bad_interrupt
                0x00000098                __vector_6
                0x00000098                __vector_11
                0x00000098                __vector_13
                0x00000098                __vector_17
                0x00000098                __vector_7
                0x00000098                __vector_5
                0x00000098                __vector_4
                0x00000098                __vector_2
                0x00000098                __vector_15
                0x00000098                __vector_8
                0x00000098                __vector_14
                0x00000098                __vector_10
                0x00000098                __vector_16
                0x00000098                __vector_18
 .text          0x0000009a      0x156 ./MK_ENCODER/mk_encoder.o
                0x0000009a                register_enc_callback
                0x000000e6                ENCODER_EVENT
                0x0000016a                __vector_3
                0x000000a4                register_sw_callback
                0x000000ae                encoder_init
 .text          0x000001f0      0x16a ./d_led.o
                0x000001f0                d_init
                0x000002a0                d_cy1
                0x0000022e                d_cy2
                0x0000031e                disp
 .text          0x0000035a      0x3d4 ./main.o
                0x0000054c                enc_switch
                0x000003e0                my_encoder
                0x000005aa                main
                0x0000035a                __vector_9
 .text          0x0000072e        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodqi4.o)
 .text          0x0000072e        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x0000072e        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x0000072e        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text          0x0000072e        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .text          0x0000072e        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eewr_byte_atmega8.o)
                0x0000072e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000072e       0x18 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodqi4.o)
                0x0000072e                __udivmodqi4
 .text.libgcc   0x00000746        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000746        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000746        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000746       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                0x00000746                __eerd_byte_m8
 .text.avr-libc
                0x00000756       0x1a c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eewr_byte_atmega8.o)
                0x00000756                __eewr_byte_m8
                0x00000758                __eewr_r18_m8
                0x00000770                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000770        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000770                exit
                0x00000770                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000770        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000774                _etext = .

.data           0x00800060        0x0 load address 0x00000774
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./MK_ENCODER/mk_encoder.o
 .data          0x00800060        0x0 ./d_led.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodqi4.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eewr_byte_atmega8.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x1f
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0x3 ./MK_ENCODER/mk_encoder.o
 .bss           0x00800063        0x0 ./d_led.o
 .bss           0x00800063        0xa ./main.o
                0x00800063                wynik
                0x00800067                clk
                0x00800068                flag_sek
                0x00800064                n1
                0x00800069                min
                0x0080006a                sek
                0x0080006b                min_t
                0x00800066                set
 .bss           0x0080006d        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodqi4.o)
 .bss           0x0080006d        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x0080006d        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x0080006d        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .bss           0x0080006d        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .bss           0x0080006d        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eewr_byte_atmega8.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080006d        0x8 ./MK_ENCODER/mk_encoder.o
                0x0080006d                enc_cnt
                0x0080006e                flag
                0x0080006f                enc_flag
                0x00800070                sw_callback
                0x00800072                ed
                0x00800073                enc_callback
 COMMON         0x00800075        0x5 ./d_led.o
                0x00800075                cy4
                0x00800076                point
                0x00800077                cy1
                0x00800078                cy2
                0x00800079                cy3
 COMMON         0x0080007a        0x5 ./main.o
                0x0080007a                Timer2
                0x0080007c                speed
                0x0080007d                Timer1
                0x0080007f                PROVIDE (__bss_end, .)
                0x00000774                __data_load_start = LOADADDR (.data)
                0x00000774                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080007f        0x0
                0x0080007f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080007f                PROVIDE (__noinit_end, .)
                0x0080007f                _end = .
                0x0080007f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x1
 *(.eeprom*)
 .eeprom        0x00810000        0x1 ./main.o
                0x00810000                eeprom
                0x00810001                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(OITiW_Timer.elf elf32-avr)
LOAD linker stubs
